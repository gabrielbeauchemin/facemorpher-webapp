extends layout

block headerContent
    <link rel="stylesheet" href="/stylesheets/jcrop/jquery.Jcrop.css" type="text/css" />

block content
    //jcrop to crop images
    script 
        include ../public/javascripts/jcrop/jquery.Jcrop.js

    //jcrop and submit 2 images. Inspiration: http://jsfiddle.net/w1Lh4w2t/
    script.
        var crop_max_width = 300;
        var crop_max_height = 300;
        var jcropApiImg1;
        var canvasImg1; 
        var contextImg1; 
        var image1; 
        var jcropApiImg2;
        var canvasImg2; 
        var contextImg2; 
        var image2; 
        const standardAirOutputImg = crop_max_width * crop_max_height;

        function loadImage(event) {
            if (event.target.files && event.target.files[0]) {
                let selectedImgId = event.currentTarget.id;
                if(selectedImgId == 'inputImg1')
                {
                    var reader = new FileReader();
                    canvasImg1 = null;
                    reader.onload = function(e) {
                    image1 = new Image();
                    image1.onload = function(){validateImage(selectedImgId);};
                    image1.src = URL.createObjectURL(event.target.files[0]);
                    }
                    reader.readAsDataURL(event.target.files[0]);
                }
                else if(selectedImgId == 'inputImg2')
                {
                    var reader = new FileReader();
                    canvasImg2 = null;
                    reader.onload = function(e) {
                    image2 = new Image();
                    image2.onload = function(){validateImage(selectedImgId);};
                    image2.src = URL.createObjectURL(event.target.files[0]);
                    }
                    reader.readAsDataURL(event.target.files[0]); 
                }
            }
        }

        function updateWidthHeigth()
        {
            if($("#keepProportions")[0].checked)
            {
                let averageWidth, averageHeight;
                if(image1 == null && image2 == null)
                {
                    return;
                }
                else if(image1 == null)
                {
                    averageWidth = image2.width;
                    averageHeight = image2.height;
                }
                else if(image2 == null)
                {
                    averageWidth = image1.width;
                    averageHeight = image1.height;
                }
                else //both images defined
                {
                    averageWidth = image1.width + image2.width / 2.0;
                    averageHeight = image1.height + image2.height / 2.0;
                }
                
                ratioWidthHeight = averageWidth / averageHeight; //used if checkbox keep proportioned is checked
                let resizeFactor =  Math.sqrt(standardAirOutputImg / (averageWidth * averageHeight));

                $("#widthImgs").val(Math.round(resizeFactor * averageWidth));
                $("#heightImgs").val(Math.round(resizeFactor * averageHeight));
            }
        }

        function dataURLtoBlob(dataURL) {
        var BASE64_MARKER = ';base64,';
        if (dataURL.indexOf(BASE64_MARKER) == -1) {
            var parts = dataURL.split(',');
            var contentType = parts[0].split(':')[1];
            var raw = decodeURIComponent(parts[1]);

            return new Blob([raw], {
            type: contentType
            });
        }
        var parts = dataURL.split(BASE64_MARKER);
        var contentType = parts[0].split(':')[1];
        var raw = window.atob(parts[1]);
        var rawLength = raw.length;
        var uInt8Array = new Uint8Array(rawLength);
        for (var i = 0; i < rawLength; ++i) {
            uInt8Array[i] = raw.charCodeAt(i);
        }

        return new Blob([uInt8Array], {
            type: contentType
        });
        }

        function validateImage(imgId) {
            if(imgId == "inputImg1")
            {
                if (canvasImg1 != null) {
                image1 = new Image();
                image1.id = imgId;
                image1.onload = function(){restartJcrop(imgId);};
                image1.src = canvasImg1.toDataURL('image/png');
                } else restartJcrop(imgId);
            }
            else if(imgId == "inputImg2")
            {
                if (canvasImg2 != null) {
                image2 = new Image();
                image2.id = imgId;
                image2.onload = function(){restartJcrop(imgId);};
                image2.src = canvasImg2.toDataURL('image/png');
                } else restartJcrop(imgId);
            }
        }

        function restartJcrop(imgId) {

            if(imgId == 'inputImg1')
            {
                if (jcropApiImg1 != null) {
                jcropApiImg1.destroy();
                }
                $("#imgViews #inputImg1").empty();
                $("#imgViews #inputImg1").append("<label>Image 1:</label><canvas id=\"canvasImg1\">");
                canvasImg1 = $("#canvasImg1")[0];
                contextImg1 = canvasImg1.getContext("2d");
                canvasImg1.width = image1.width;
                canvasImg1.height = image1.height;
                updateWidthHeigth();
                contextImg1.drawImage(image1, 0, 0);
                $("#canvasImg1").Jcrop({
                    onSelect: function(coord){applyCrop(coord, imgId);},
                    boxWidth: crop_max_width,
                    boxHeight: crop_max_height
                }, function() {
                    jcropApiImg1 = this;
                });
            }
            else if(imgId == 'inputImg2')
            {
                if (jcropApiImg2 != null) {
                jcropApiImg2.destroy();
                }
                $("#imgViews #inputImg2").empty();
                $("#imgViews #inputImg2").append("<label>Image 2:</label><canvas id=\"canvasImg2\">");
                canvasImg2 = $("#canvasImg2")[0];
                contextImg2 = canvasImg2.getContext("2d");
                canvasImg2.width = image2.width;
                canvasImg2.height = image2.height;
                updateWidthHeigth();
                contextImg2.drawImage(image2, 0, 0);
                $("#canvasImg2").Jcrop({
                    onSelect: function(coord){applyCrop(coord, imgId);},
                    boxWidth: crop_max_width,
                    boxHeight: crop_max_height
                }, function() {
                    jcropApiImg2 = this;
                });
            }
        }

        function applyCrop(coords, imgId) {
            let x = Math.round(coords.x);
            let y = Math.round(coords.y);
            let w = Math.round(coords.w);
            let h = Math.round(coords.h);

            if(imgId == 'inputImg1')
            {
                canvasImg1.width = w;
                canvasImg1.height = h;
                contextImg1.drawImage(image1, x, y, w, h, 0, 0, canvasImg1.width, canvasImg1.height);
            }
            else if(imgId == 'inputImg2')
            {
                canvasImg2.width = w;
                canvasImg2.height = h;
                contextImg2.drawImage(image2, x, y, w, h, 0, 0, canvasImg2.width, canvasImg2.height);
            }
            
            validateImage(imgId);
        }
        
        function uploadImagesAndForm(event)
        {
            event.preventDefault();
            var getUrl = window.location;
            var baseUrl = getUrl.protocol + "//" + getUrl.host + "/";
            let url = baseUrl + "twoFacesMorphingForm/UploadImages";
            formData = new FormData(document.getElementById('formUploadImagesAndForm'));
            var blob1 = dataURLtoBlob(canvasImg1.toDataURL('image/png'));
            var blob2 = dataURLtoBlob(canvasImg2.toDataURL('image/png'));
            //---Add file blob to the form data
            formData.append("img1", blob1);
            formData.append("img2", blob2);
            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                enctype: 'multipart/form-data',
                processData: false,  // Important for multipart/form-data!
                contentType: false,
                cache: false,
                processData: false,
                complete: function(data) {
                    window.location.href = baseUrl + "twoFacesMorphingRes?imagesFolder=" + data.responseText;
                }
            });
        }

        function updateProportions(event)
        {
            if($("#keepProportions")[0].checked)
            {
              let idField = event.currentTarget.id;
              if(idField == "widthImgs")
              {
                  $("#heightImgs").val(Math.round( (1/ratioWidthHeight) * $("#widthImgs").val()));
              }
              else if(idField == "heightImgs")
              {
                  
                  $("#widthImgs").val(Math.round(ratioWidthHeight * $("#heightImgs").val()));
              }
            }
        }

        function updateOnCheck()
        {
            if($("#keepProportions")[0].checked)
            {
                //that will calls the event updateProportions
                //WidthImgs is choosed but height could be choose instead
                var event = new Event('change');
                document.querySelector("#widthImgs").dispatchEvent(event);
            }
        }
    
    //end script 

    <div class="div-centered">
        <div class="containerForm">
            <h1>Two Faces Morphing</h1><br/>
            <form action="" id = "formUploadImagesAndForm" onsubmit="uploadImagesAndForm(event)">
                <label>Choose the images and select only the section of the face</label>
                <input type="file" id="inputImg1" accept=".bmp,.cur,.gif,.hdf4,.ico,.jpg,.jp2,.pmb,.pcx,.pgm,.png,.ppm,.ras,.tiff,.xwd" onchange="loadImage(event)" required > 
                <input type="file" id="inputImg2" accept=".bmp,.cur,.gif,.hdf4,.ico,.jpg,.jp2,.pmb,.pcx,.pgm,.png,.ppm,.ras,.tiff,.xwd" onchange="loadImage(event)" required >
                <div id="imgViews">
                    //javascript will add images here
                    <div id="inputImg1"></div>
                    <div id="inputImg2"></div>
                </div>
                <br/>
                <div display="block">
                    <label style="font-weight:normal;" for="keepProportions">
                        <input type="checkbox" id="keepProportions" onchange="updateOnCheck()" checked/>
                        <span>keep proportions</span>
                    </label>
                </div>
                <label for="widthImgs">Width of the output images</label>
                <input type="number" step="1" id="widthImgs" name="widthImgs" class="full-width" value="300" min="1" max="1000" onchange="updateProportions(event)" required > <br/>
                <label for="heightImgs">Height of the output images</label>
                <input type="number" step="1" id="heightImgs" name="heightImgs" class="full-width" value="300" min="1" max="1000" onchange="updateProportions(event)" required > <br/>
                <label for="nbrImgs">Number of images to generate</label> 
                <input type="number" step="1" id="nbrImgs" name="nbrImgs" class="full-width" value="30" min="1" max="100" required ><br/>
                <br/>
                <input class="page-scroll btn btn-xl" type="submit" value="Morph">
            </form>
        </div>
    </div>
    